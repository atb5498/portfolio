{"version":3,"sources":["components/Header/Header.js","components/WebDev/WebDev.js","App.js","serviceWorker.js","index.js"],"names":["Header","id","className","src","alt","data-toggle","data-placement","title","href","target","role","WebDev","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uPAmCeA,MAhCf,WACI,OACI,yBAAKC,GAAG,UACJ,yBAAKC,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,eACX,yBAAKD,GAAG,OAAOE,IAAI,sBAAsBC,IAAI,SAE7C,6CAEA,wDAEA,uBAAGC,cAAY,UAAUC,iBAAe,MAAMC,MAAM,qBAAoB,uBACpEL,UAAU,2BAGd,uBAAGM,KAAK,6BAA6BC,OAAO,SAASJ,cAAY,UAAUC,iBAAe,MACtFC,MAAM,UAAS,uBAAGL,UAAU,sBAAsBQ,KAAK,YAG3D,uBAAGF,KAAK,wCAAwCC,OAAO,SAASJ,cAAY,UAAUC,iBAAe,MACjGC,MAAM,kBAAiB,uBAAGL,UAAU,0BAA0BQ,KAAK,SAASL,cAAY,mB,MCuBzGM,MA7Cf,WACI,OACI,yBAAKV,GAAG,WACJ,yBAAKC,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,+CACA,yBAAKA,UAAU,uBAK3B,yBAAKA,UAAU,aACX,yBAAKD,GAAG,YACJ,yBAAKC,UAAU,0CACX,yBAAKD,GAAG,YAAYC,UAAU,2BAC1B,6CAEA,uBAAGM,KAAK,8CAA8CC,OAAO,UACzD,yBAAKR,GAAG,WAAWE,IAAI,8BAA8BD,UAAU,oBAAoBE,IAAI,uBAI/F,yBAAKH,GAAG,YAAYC,UAAU,2BAC1B,8CAEA,uBAAGM,KAAK,2CAA2CC,OAAO,UACtD,yBAAKN,IAAI,2BAA2BD,UAAU,oBAAoBE,IAAI,uBAI9E,yBAAKH,GAAG,YAAYC,UAAU,2BAC1B,+CAEA,uBAAGM,KAAK,oCAAoCC,OAAO,UAC/C,yBAAKN,IAAI,wBAAwBD,UAAU,oBAAoBE,IAAI,4BCzBpFQ,MATf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCIcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7ec9ee40.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\";\n\nfunction Header() {\n    return (\n        <div id=\"header\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"text-center\">\n                            <img id=\"logo\" src=\"images/ab-color.png\" alt=\"logo\" />\n\n                            <h1>ANDY BICKFORD</h1>\n\n                            <h2>WEB DEVELOPMENT & DESIGN</h2>\n\n                            <a data-toggle=\"tooltip\" data-placement=\"top\" title=\"atb5498@gmail.com\"><i\n                                className=\"fas fa-envelope fa-2x\"></i>\n                            </a>\n\n                            <a href=\"https://github.com/atb5498\" target=\"_blank\" data-toggle=\"tooltip\" data-placement=\"top\"\n                                title=\"GitHub\"><i className=\"fab fa-github fa-2x\" role=\"button\"></i>\n                            </a>\n\n                            <a href=\"https://stoker-deer-67427.netlify.com\" target=\"_blank\" data-toggle=\"tooltip\" data-placement=\"top\"\n                                title=\"Graphic Design\"><i className=\"fas fa-pencil-alt fa-2x\" role=\"button\" data-toggle=\"tooltip\"></i>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./WebDev.css\";\n\nfunction WebDev() {\n    return (\n        <div id=\"web-dev\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h1>LATEST PROJECTS</h1>\n                        <div className=\"divider mx-auto\"></div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"container\">\n                <div id=\"projects\">\n                    <div className=\"row justify-content-center text-center\">\n                        <div id=\"project-1\" className=\"col-7 col-sm-6 col-md-4\">\n                            <p>Plan your day.</p>\n\n                            <a href=\"https://atb5498.github.io/work-day-planner/\" target=\"_blank\">\n                                <img id=\"project3\" src=\"images/work-day-planner.png\" className=\"project img-fluid\" alt=\"Responsive image\" />\n                            </a>\n                        </div>\n\n                        <div id=\"project-2\" className=\"col-7 col-sm-6 col-md-4\">\n                            <p>Find a brewery.</p>\n\n                            <a href=\"https://atb5498.github.io/brew-near-you/\" target=\"_blank\">\n                                <img src=\"images/brew-near-you.png\" className=\"project img-fluid\" alt=\"Responsive image\" />\n                            </a>\n                        </div>\n\n                        <div id=\"project-3\" className=\"col-7 col-sm-6 col-md-4\">\n                            <p>Sell your books.</p>\n\n                            <a href=\"https://the-bookup.herokuapp.com/\" target=\"_blank\">\n                                <img src=\"images/the-bookup.png\" className=\"project img-fluid\" alt=\"Responsive image\" />\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default WebDev;\n","import React from \"react\";\nimport Header from \"./components/Header/Header\";\nimport WebDev from \"./components/WebDev/WebDev\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <WebDev />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}